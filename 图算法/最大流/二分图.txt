二分匹配

最小点覆盖数：选取最少的点，使任意一条边至少有一个端点被选择。
              最小覆盖要求用最少的点（ＸＸ集合或ＹＹ集合的都行）让每条边都至少和其中一个点关联。
              可以证明：最少的点（即覆盖数）＝最大匹配数

最大独立数：选取最多的点，使任意所选两点均不相连。

最小路径覆盖数：对于一个 DAG（有向无环图），选取最少条路径，使得每个顶点属于且仅属于一条路径，
		路径长可以为 0（即单个点）。也就是说用尽量少的不相交简单路径覆盖DAG的所有结点。
		解决此类问题可以建立一个二分图模型。把所有顶点i拆成两个：
		ＸＸ结点集中的ii和YY结点集中的i′i′,如果有边i→ji→j，
		则在二分图中引入边i→j′i→j′，设二分图最大匹配为m,则结果就是n-m
		
定理1：最大匹配数 = 最小点覆盖数（这是 Konig 定理）

定理2：最大匹配数 = 最大独立数

定理3：最小路径覆盖数 = 顶点数 - 最大匹配数

1、匈牙利算法 (O(V*E))
 
	增广路经上的边数一定是奇数个

	增广路经上的边链接的两个点一定不在同一个集合中

	增广路径上没有重复的点

	增广路经的起点和终点所连的边一定不在当前的匹配中。

	可以通过翻转增广路得到更匹配

那么每次找到增广路就可以将最大匹配数+1了，然后记录新的匹配

for 左边集中的每个点
	BFS或DFS构建树(根到叶子节点为交替路)
		判断是否存在增广路 
			增广路取反

2 KM算法 带权重匹配

3 其他的一些衍生问题


最大流算法：
区别只在于对图的搜索方法不同